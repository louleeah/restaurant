plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.9'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "org.sonarqube" version "3.0"
	id 'jacoco'
}

group = 'com.training'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

jar {
	manifest {
		attributes 'Main-Class': 'com.training.restaurant.RestaurantApplication'
	}
}

jacoco {
	toolVersion = "0.8.9"
}

test {
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'
	implementation 'au.com.dius:pact-jvm-provider-spring:4.0.10'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.mockito:mockito-core:5.2.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
	testImplementation 'org.testcontainers:postgresql:1.17.3'
	testImplementation 'org.testcontainers:junit-jupiter:1.17.3'
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.9.0'
	implementation 'org.flywaydb:flyway-core:9.16.0'
}

tasks.named('test') {
	useJUnitPlatform()
}
